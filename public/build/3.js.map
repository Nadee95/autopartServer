{"version":3,"sources":["../../src/pages/item-info/item-info.module.ts","../../node_modules/@ionic-native/launch-navigator/index.js","../../src/pages/item-info/item-info.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACL;AACsB;AAWjE;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,gEAAY;aACb;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,gEAAY,CAAC;aACvC;YACD,SAAS,EAAC,CAAC,uFAAe,CAAC;SAC5B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;ACd/B;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC6B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0CAA0C;AACrD;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C,uBAAuB;AACvB,iBAAiB;AACjB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C,yBAAyB;AACzB,mBAAmB;AACnB;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,mBAAmB;AACnB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,mBAAmB;AACnB;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA,mBAAmB,OAAO;AAC1B,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA,mBAAmB;AACnB,wBAAwB;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,0BAA0B;AAC1B,mBAAmB;AACnB;AACA,8BAA8B,QAAQ;AACtC;AACA,2BAA2B;AAC3B,uBAAuB;AACvB;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA,qCAAqC;AACrC;AACA,SAAS,OAAO,iEAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0CAA0C;AACzD;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACQ;AAC3B,iC;;;;;;;;;;;;;;;;;;;;;AC7Z0C;AACe;AACgC;AACzF;;;;;GAKG;AAOH;IAEE,sBAAmB,OAAsB,EAAS,SAAoB,EAAS,eAAgC;QAA5F,YAAO,GAAP,OAAO,CAAe;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAI/G,CAAC;IAED,qCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IAC7C,CAAC;IACD,+BAAQ,GAAR;QACG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAC,UAAU,CAAC,CAAC;aACnD,IAAI,CACH,iBAAO,IAAI,cAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAjC,CAAiC,EAC5C,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,KAAK,CAAC,EAA/C,CAA+C,CACzD,CAAC;IACN,CAAC;IAjBU,YAAY;QAJxB,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;WACG;SAC9B,CAAC;qBAG+G;OAFpG,YAAY,CAkBxB;IAAD,CAAC;AAAA;SAlBY,YAAY,gB","file":"3.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ItemInfoPage } from './item-info';\nimport { LaunchNavigator } from '@ionic-native/launch-navigator';\n\n@NgModule({\n  declarations: [\n    ItemInfoPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ItemInfoPage),\n  ],\n  providers:[LaunchNavigator]\n})\nexport class ItemInfoPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-info/item-info.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Launch Navigator\n * @description\n * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n *\n * @usage\n * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n *\n * ```typescript\n * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n *\n * constructor(private launchNavigator: LaunchNavigator) { }\n *\n * ...\n *\n * let options: LaunchNavigatorOptions = {\n *   start: 'London, ON',\n *   app: LaunchNavigator.APPS.UBER\n * };\n *\n * this.launchNavigator.navigate('Toronto, ON', options)\n *   .then(\n *     success => console.log('Launched navigator'),\n *     error => console.log('Error launching navigator', error)\n *   );\n * ```\n * @interfaces\n * LaunchNavigatorOptions\n * PromptsOptions\n * RememberChoiceOptions\n * AppSelectionOptions\n * UserChoice\n * UserPrompted\n * AppSelection\n */\nvar LaunchNavigator = (function (_super) {\n    __extends(LaunchNavigator, _super);\n    function LaunchNavigator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.APP = {\n            USER_SELECT: 'user_select',\n            APPLE_MAPS: 'apple_maps',\n            GOOGLE_MAPS: 'google_maps',\n            WAZE: 'waze',\n            CITYMAPPER: 'citymapper',\n            NAVIGON: 'navigon',\n            TRANSIT_APP: 'transit_app',\n            YANDEX: 'yandex',\n            UBER: 'uber',\n            TOMTOM: 'tomtom',\n            BING_MAPS: 'bing_maps',\n            SYGIC: 'sygic',\n            HERE_MAPS: 'here_maps',\n            MOOVIT: 'moovit'\n        };\n        _this.TRANSPORT_MODE = {\n            DRIVING: 'driving',\n            WALKING: 'walking',\n            BICYCLING: 'bicycling',\n            TRANSIT: 'transit'\n        };\n        return _this;\n    }\n    /**\n     * Launches navigator app\n     * @param destination {string|number[]} Location name or coordinates (as string or array)\n     * @param options {LaunchNavigatorOptions}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.navigate = /**\n       * Launches navigator app\n       * @param destination {string|number[]} Location name or coordinates (as string or array)\n       * @param options {LaunchNavigatorOptions}\n       * @returns {Promise<any>}\n       */\n    function (destination, options) { return; };\n    /**\n     * Determines if the given app is installed and available on the current device.\n     * @param app {string}\n     * @returns {Promise<any>}\n     */\n    /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    LaunchNavigator.prototype.isAppAvailable = /**\n       * Determines if the given app is installed and available on the current device.\n       * @param app {string}\n       * @returns {Promise<any>}\n       */\n    function (app) { return; };\n    /**\n     * Returns a list indicating which apps are installed and available on the current device.\n     * @returns {Promise<string[]>}\n     */\n    /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    LaunchNavigator.prototype.availableApps = /**\n       * Returns a list indicating which apps are installed and available on the current device.\n       * @returns {Promise<string[]>}\n       */\n    function () { return; };\n    /**\n     * Returns the display name of the specified app.\n     * @param app {string}\n     * @returns {string}\n     */\n    /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    LaunchNavigator.prototype.getAppDisplayName = /**\n       * Returns the display name of the specified app.\n       * @param app {string}\n       * @returns {string}\n       */\n    function (app) { return; };\n    /**\n     * Returns list of supported apps on a given platform.\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getAppsForPlatform = /**\n       * Returns list of supported apps on a given platform.\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of transport mode.\n     * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsTransportMode = /**\n       * Indicates if an app on a given platform supports specification of transport mode.\n       * @param app {string} specified as a string, you can use one of the constants, e.g `LaunchNavigator.APP.GOOGLE_MAPS`\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Returns the list of transport modes supported by an app on a given platform.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {string[]}\n     */\n    /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    LaunchNavigator.prototype.getTransportModes = /**\n       * Returns the list of transport modes supported by an app on a given platform.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {string[]}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsDestName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of start location.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStart = /**\n       * Indicates if an app on a given platform supports specification of start location.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsStartName = /**\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * Indicates if an app on a given platform supports specification of launch mode.\n     * Note that currently only Google Maps on Android does.\n     * @param app {string}\n     * @param platform {string}\n     * @returns {boolean}\n     */\n    /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    LaunchNavigator.prototype.supportsLaunchMode = /**\n       * Indicates if an app on a given platform supports specification of launch mode.\n       * Note that currently only Google Maps on Android does.\n       * @param app {string}\n       * @param platform {string}\n       * @returns {boolean}\n       */\n    function (app, platform) { return; };\n    /**\n     * @param destination {string | number[]}\n     * @param options {LaunchNavigatorOptions}\n     */\n    /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    LaunchNavigator.prototype.userSelect = /**\n       * @param destination {string | number[]}\n       * @param options {LaunchNavigatorOptions}\n       */\n    function (destination, options) { };\n    LaunchNavigator.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            successIndex: 2,\n            errorIndex: 3\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"navigate\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"isAppAvailable\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], LaunchNavigator.prototype, \"availableApps\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", String)\n    ], LaunchNavigator.prototype, \"getAppDisplayName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getAppsForPlatform\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsTransportMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Array)\n    ], LaunchNavigator.prototype, \"getTransportModes\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsDestName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStart\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsStartName\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, String]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LaunchNavigator.prototype, \"supportsLaunchMode\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LaunchNavigator.prototype, \"userSelect\", null);\n    /**\n     * @name Launch Navigator\n     * @description\n     * Requires Cordova plugin: uk.co.workingedge.phonegap.plugin.launchnavigator. For more info, please see the [LaunchNavigator plugin docs](https://github.com/dpa99c/phonegap-launch-navigator).\n     *\n     * @usage\n     * Please refer to the plugin's repo for detailed usage. This docs page only explains the Native wrapper.\n     *\n     * ```typescript\n     * import { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n     *\n     * constructor(private launchNavigator: LaunchNavigator) { }\n     *\n     * ...\n     *\n     * let options: LaunchNavigatorOptions = {\n     *   start: 'London, ON',\n     *   app: LaunchNavigator.APPS.UBER\n     * };\n     *\n     * this.launchNavigator.navigate('Toronto, ON', options)\n     *   .then(\n     *     success => console.log('Launched navigator'),\n     *     error => console.log('Error launching navigator', error)\n     *   );\n     * ```\n     * @interfaces\n     * LaunchNavigatorOptions\n     * PromptsOptions\n     * RememberChoiceOptions\n     * AppSelectionOptions\n     * UserChoice\n     * UserPrompted\n     * AppSelection\n     */\n    LaunchNavigator = __decorate([\n        Plugin({\n            pluginName: 'LaunchNavigator',\n            plugin: 'uk.co.workingedge.phonegap.plugin.launchnavigator',\n            pluginRef: 'launchnavigator',\n            repo: 'https://github.com/dpa99c/phonegap-launch-navigator',\n            platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n        })\n    ], LaunchNavigator);\n    return LaunchNavigator;\n}(IonicNativePlugin));\nexport { LaunchNavigator };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/launch-navigator/index.js\n// module id = 301\n// module chunks = 3","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { LaunchNavigator, LaunchNavigatorOptions } from '@ionic-native/launch-navigator';\n/**\n * Generated class for the ItemInfoPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-item-info',\n  templateUrl: 'item-info.html',\n})\nexport class ItemInfoPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams,private launchNavigator: LaunchNavigator) {\n   \n    \n    \n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad ItemInfoPage');\n  }\n  navigate(){\n     this.launchNavigator.navigate([6.9108076,79.8609294])\n      .then(\n        success => console.log('Launched navigator'),\n        error => console.log('Error launching navigator', error)\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/item-info/item-info.ts"],"sourceRoot":""}